#include <iostream>
using namespace std;
#include <stdio.h>
#include <stdlib.h>
typedef  int  ElemType;
class SeqStack
{  //顺序栈类定义
    private:
        ElemType *elements; //数组存放栈元素
        int top;             //栈顶指示器
        int maxSize;               //栈最大容量
        void overflowProcess(); //栈的溢出处理
    public:
         SeqStack(int sz);                    //构造函数
         ~SeqStack() { delete []elements; };        //析构函数
         void Push(ElemType x);    //进栈
         int Pop(ElemType &x);     //出栈
         int IsEmpty() const { return top == -1; }
         int IsFull() const { return top == maxSize-1; }
         int GetSize() const {return top+1;}
};
SeqStack::SeqStack(int sz)
{  elements=new ElemType[sz];  //申请连续空间
    if(elements==NULL) {cout<<"空间申请错误！"<<endl;exit(1);}
    else { top=-1;       //栈顶指示器指向栈底
               maxSize=sz;     //栈的最大空间
               };
};
void SeqStack::overflowProcess()
{
    ElemType*newArray=new ElemType[2*maxSize];
    for(int i=0;i<maxSize;i++)
    newArray[i]=elements[i];
          maxSize=2*maxSize;
    delete []elements;
    elements=newArray;
}
/*
**********************************************************
  补充overflowProcess() 函数
**********************************************************
*/
void SeqStack::Push(ElemType x)
{   //若栈满,则溢出处理，将元素x插入该栈栈顶
    if (IsFull() == 1) overflowProcess();   //栈满
    elements[++top] = x;       //栈顶指针先加1, 再元素进栈
};
int SeqStack::Pop(ElemType & x)
{//若栈不空，函数退出栈顶元素并将栈顶元素的值赋给x,
  //返回true，否则返回false
   if (IsEmpty() == 1) return 0;
    x = elements[top--];           //先取元素，栈顶指针退1
      return 1;    //退栈成功
};
int main()
{
   int n;
   int temp=0;
   int Base;
   int x;
   cin>>n>>Base;
   temp=n;
   SeqStack *s=new SeqStack(1050);
   int length=0;
   if(n==0)
    s->Push(0);
   while(n)
   {
      int res=n%Base;
       s->Push(res);//入栈
       length++;
       n=n/Base;
   }
   int t=s->Pop(x);
   cout<<"("<<temp<<")"<<10<<"=";
   cout<<"(";
   while(t)
   {
     if(Base<10)
         cout<<x;
         else
         {
             if(x>=10)
             cout<<(char)(x-10+65);
             else
              cout<<x;
         }
         t=s->Pop(x);
   }
   cout<<")"<<Base<<endl;
    cout<<"Length="<<length<<endl;
   return 0;
}

/*
**************************************************************
  补充main()函数
**************************************************************
*/
